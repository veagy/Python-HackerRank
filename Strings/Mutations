#We have seen that lists are mutable (they can be changed), and tuples are immutable (they cannot be changed).
#Let's try to understand this with an example.
#You are given an immutable string, and you want to make changes to it.
#Task 
#Read a given string, change the character at a given index and then print the modified string.
#Input Format 
#The first line contains a string, S. 
#The next line contains an integer i, denoting the index location and a character c separated by a space.
#Output Format 
#Using any of the methods explained above, replace the character at index i with character c.

def mutate_string(string, position, character):
    return string[:position] + character + string[position+1:]



if __name__ == '__main__':
    s = input()
    i, c = input().split()
    s_new = mutate_string(s, int(i), c)
    print(s_new)
    
    
#s[:]  outputs "You are learning Python"
#s[1:6] outputs "ou ar", because s[1] is "o", s[5] is "r"
#s[10:] outputs "arning Python" because it's the slice from index 10 to the end of the string
#s[:10] outputs "You are le" because it's the slice from the start to index 9
